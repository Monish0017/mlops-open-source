name: Validate Model

on:
  push:  # Trigger on pushes to any branch (for feature branches)
  pull_request:
    branches:
      - main  # Trigger on PRs targeting main

permissions:
  contents: write  # Allow writing to repo for git push

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        lfs: true   # Enable Git LFS
        fetch-depth: 0  # Fetch all history to ensure proper diff comparison

    - name: Check if models changed
      id: changed-files
      run: |
        if git diff --name-only HEAD~1 | grep -q '^models/'; then
          echo "models_changed=true" >> $GITHUB_OUTPUT
        else
          echo "models_changed=false" >> $GITHUB_OUTPUT
          echo "No model changes detected. Skipping validation."
        fi

    - name: Set up Python
      if: steps.changed-files.outputs.models_changed == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      if: steps.changed-files.outputs.models_changed == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install scikit-learn pandas numpy joblib

    - name: Ensure Base Model Directory Exists
      if: steps.changed-files.outputs.models_changed == 'true'
      run: |
        mkdir -p base_model
        touch base_model/.gitkeep

    - name: Run Validation
      if: steps.changed-files.outputs.models_changed == 'true'
      run: python scripts/compare_models.py --base base_model/model.pkl --new models/

    - name: Commit Base Model Update
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.changed-files.outputs.models_changed == 'true' && success()
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add base_model/
        if git diff --cached --quiet; then
          echo "No changes to base model"
        else
          git commit -m "Update base model after successful validation"
          git push
          echo "Base model updated and pushed"
        fi

    - name: Upload Logs
      if: steps.changed-files.outputs.models_changed == 'true' && always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-report
        path: validation_report.txt
